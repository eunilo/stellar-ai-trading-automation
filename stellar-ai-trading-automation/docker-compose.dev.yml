# Stellar AI Trading Automation - Development Docker Compose
# Development environment with hot reload and debugging

version: '3.8'

services:
  # Development application
  app:
    build:
      context: .
      dockerfile: Dockerfile.dev
    container_name: stellar-ai-trading-dev
    restart: unless-stopped
    ports:
      - "3000:3000"
      - "9229:9229" # Node.js debug port
    environment:
      - NODE_ENV=development
      - PORT=3000
      - HOST=0.0.0.0
      - DEBUG=*
    env_file:
      - .env
    depends_on:
      - postgres
      - redis
    volumes:
      - .:/app
      - /app/node_modules
      - ./logs:/app/logs
      - ./models:/app/models
      - ./data:/app/data
    networks:
      - stellar-ai-network
    command: npm run dev

  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    container_name: stellar-ai-postgres-dev
    restart: unless-stopped
    environment:
      - POSTGRES_DB=stellar_defi_dev
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=dev_password
    volumes:
      - postgres_dev_data:/var/lib/postgresql/data
      - ./scripts/init-db.sql:/docker-entrypoint-initdb.d/init-db.sql
    ports:
      - "5432:5432"
    networks:
      - stellar-ai-network

  # Redis Cache
  redis:
    image: redis:7-alpine
    container_name: stellar-ai-redis-dev
    restart: unless-stopped
    command: redis-server --appendonly yes
    volumes:
      - redis_dev_data:/data
    ports:
      - "6379:6379"
    networks:
      - stellar-ai-network

  # Adminer (Database Admin)
  adminer:
    image: adminer:latest
    container_name: stellar-ai-adminer
    restart: unless-stopped
    ports:
      - "8080:8080"
    depends_on:
      - postgres
    networks:
      - stellar-ai-network

volumes:
  postgres_dev_data:
    driver: local
  redis_dev_data:
    driver: local

networks:
  stellar-ai-network:
    driver: bridge
